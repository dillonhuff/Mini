operation dscal(r matrix double 1 1 1 1 alpha,
	  	output matrix double gen 1 1 1 x) {
  x = alpha .* x;
}

operation dswap(output matrix double gen 1 1 1 x,
	  	output matrix double gen 1 1 1 y) {
  t = x;
  x = y;
  y = t;
}

operation dcopy(r matrix double gen 1 1 1 x,
	  	output matrix double gen 1 1 1 y) {
  y = x;
}

operation daxpy(r matrix double 1 1 1 1 alpha,
	  	r matrix double gen 1 1 1 x,
		r matrix double gen 1 1 1 y) {
  y = alpha .* x + y;
}

operation ddot(r matrix double 1 gen 1 1 x,
	       r matrix double gen 1 1 1 y,
	       output matrix double 1 1 1 1 dot) {
  dot = x * y;
}

operation dadot(r matrix double 1 gen 1 1 x,
	       	r matrix double gen 1 1 1 y,
	       	r matrix double 1 1 1 1 alpha,
	       	output matrix double 1 1 1 1 dot) {
  dot = alpha + x * y;
}

operation sscal(r matrix float 1 1 1 1 alpha,
	  	output matrix float gen 1 1 1 x) {
  x = alpha .* x;
}

operation sswap(output matrix float gen 1 1 1 x,
	  	output matrix float gen 1 1 1 y) {
  t = x;
  x = y;
  y = t;
}

operation scopy(r matrix float gen 1 1 1 x,
	  	output matrix float gen 1 1 1 y) {
  y = x;
}

operation saxpy(r matrix float 1 1 1 1 alpha,
	  	r matrix float gen 1 1 1 x,
		r matrix float gen 1 1 1 y) {
  y = alpha .* x + y;
}

operation sdot(r matrix float 1 gen 1 1 x,
	       r matrix float gen 1 1 1 y,
	       output matrix float 1 1 1 1 dot) {
  dot = x * y;
}

operation sadot(r matrix float 1 gen 1 1 x,
	       	r matrix float gen 1 1 1 y,
	       	r matrix float 1 1 1 1 alpha,
	       	output matrix float 1 1 1 1 dot) {
  dot = alpha + x * y;
}

operation dgsSMmul(r matrix double 1 1 1 1 alpha,
	  	   output matrix double gen gen gen 1 A) {
  A = alpha.*A;
}

operation dmadd(r matrix double gen gen gen gen A,
	       r matrix double gen gen gen gen B) {
  A = A + B;
}

operation dmaddRM(r matrix double gen gen gen 1 A,
	       r matrix double gen gen gen 1 B) {
  A = A + B;
}

operation dmaddCM(r matrix double gen gen 1 gen A,
	       r matrix double gen gen 1 gen B) {
  A = A + B;
}

operation dmvmul(r matrix double gen 1 1 1 x,
	  	 r matrix double gen gen 1 gen A,
	  	 output matrix double gen 1 1 1 y) {
  y = A*x + y;
}

operation dgemv(r matrix double 1 1 1 1 alpha,
	  	r matrix double gen 1 1 1 x,
		r matrix double gen gen 1 gen A,
		output matrix double gen 1 1 1 y) {
  y = alpha .* A*x + y;
}

operation dgemmCM(r matrix double 1 1 1 1 alpha,
	  	  r matrix double 1 1 1 1 beta,
		  r matrix double gen gen 1 gen A,
		  r matrix double gen gen 1 gen B,
		  output matrix double gen gen 1 gen C) {
  C = alpha .* A*B + beta .* C;
}

operation sgsSMmul(r matrix float 1 1 1 1 alpha,
	  	   output matrix float gen gen gen 1 A) {
  A = alpha.*A;
}

operation smadd(r matrix float gen gen gen gen A,
	       r matrix float gen gen gen gen B) {
  A = A + B;
}

operation smaddRM(r matrix float gen gen gen 1 A,
	       r matrix float gen gen gen 1 B) {
  A = A + B;
}

operation smaddCM(r matrix float gen gen 1 gen A,
	       r matrix float gen gen 1 gen B) {
  A = A + B;
}

operation smvmul(r matrix float gen 1 1 1 x,
	  	 r matrix float gen gen 1 gen A,
	  	 output matrix float gen 1 1 1 y) {
  y = A*x + y;
}

operation sgemv(r matrix float 1 1 1 1 alpha,
	  	r matrix float gen 1 1 1 x,
		r matrix float gen gen 1 gen A,
		output matrix float gen 1 1 1 y) {
  y = alpha .* A*x + y;
}

operation sgemmCM(r matrix float 1 1 1 1 alpha,
	  	  r matrix float 1 1 1 1 beta,
		  r matrix float gen gen 1 gen A,
		  r matrix float gen gen 1 gen B,
		  output matrix float gen gen 1 gen C) {
  C = alpha .* A*B + beta .* C;
}

operation sgemmTCM(r matrix float 1 1 1 1 alpha,
	  	  r matrix float 1 1 1 1 beta,
		  r matrix float gen gen 1 gen A,
		  r matrix float gen gen 1 gen B,
		  output matrix float gen gen 1 gen C) {
  C = alpha .* A'*B - beta .* C';
}

operation dgemmTCM(r matrix double 1 1 1 1 alpha,
	  	  r matrix double 1 1 1 1 beta,
		  r matrix double gen gen 1 gen A,
		  r matrix double gen gen 1 gen B,
		  output matrix double gen gen 1 gen C) {
  C = alpha .* A'*B - beta .* C';
}